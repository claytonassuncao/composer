__import__('pysqlite3')
import sys
sys.modules['sqlite3'] = sys.modules.pop('pysqlite3')

import os
import streamlit as st
from crewai import Agent, Task, Crew, Process, LLM
import json


# Configurando o modelo usando a classe LLM nativa do CrewAI
llm = LLM(    
    model="gpt-4",
    temperature=0.8
)

# Fun√ß√£o para configurar o agente
def criar_agente_corretor():
    return Agent(
        role="Corretor de Reda√ß√£o",
        goal="Corrigir erros de ortografia, acentua√ß√£o, gram√°tica, estrutura frasal e vocabul√°rio do texto: {redacao}.",
        verbose=True,
        memory=True,
        llm=llm,
        backstory="""
            Voc√™ √© um especialista em l√≠ngua portuguesa, com vasta experi√™ncia em corre√ß√£o de textos e reda√ß√£o de conte√∫do.
            Seu objetivo √© garantir que o texto seja claro, coeso e gramaticalmente correto, mantendo a ess√™ncia e a mensagem original.
            Voc√™ √© formado em Letras, possui mestrado em Lingu√≠stica e tem experi√™ncia em revis√£o de textos acad√™micos, liter√°rios e publicit√°rios.
        """
    )

# Fun√ß√£o para criar a tarefa de corre√ß√£o
def criar_tarefa_correcao(agente):
    return Task(
        description="""
            Voc√™ ir√° entregar um texto revisado e corrigido, com base nas instru√ß√µes fornecidas:
                        
            Instru√ß√µes:
            - Aponte os erros de ortografia, acentua√ß√£o, gram√°tica, estrutura frasal e vocabul√°rio do texto.
            - Garanta que o texto siga as normas da l√≠ngua portuguesa e seja adequado ao p√∫blico-alvo.
        """,
        expected_output="""
            - Um texto revisado, formatado e corrigido.
            - Erros destacados em **negrito**.
            - Um bloco com o resumo das corre√ß√µes realizadas, formatado com uma cor diferente.
        """,
        agent=agente
    )

# Fun√ß√£o para executar a corre√ß√£o
def corrigir_redacao(redacao):
    if len(redacao) < 500:
        return "O texto deve conter no m√≠nimo 500 caracteres."

    agente = criar_agente_corretor()
    tarefa = criar_tarefa_correcao(agente)

    # Criando a tripula√ß√£o
    equipe = Crew(
        agents=[agente],
        tasks=[tarefa],
        process=Process.sequential
    )

    # Executando a tripula√ß√£o
    resultado = equipe.kickoff(inputs={"redacao": redacao})

    return resultado

# Interface do Streamlit
st.title("üìù Corretor de Reda√ß√£o")
st.write("Escreva sua reda√ß√£o e solicite que o Agente corrija os erros de ortografia, acentua√ß√£o, gram√°tica, estrutura frasal e vocabul√°rio.")

# Entrada do usu√°rio (m√∫ltiplas linhas)
redacao = st.text_area(
    "Digite aqui a reda√ß√£o que deseja corrigir:",
    height=200
)

# Bot√£o para gerar a corre√ß√£o
if st.button("Corrigir Reda√ß√£o"):
    with st.spinner("Corrigindo seu texto. Aguarde..."):
        try:
            resultado = corrigir_redacao(redacao)

            if isinstance(resultado, str) and resultado == "O texto deve conter no m√≠nimo 500 caracteres.":
                st.warning(resultado)
            else:
                st.success("‚úÖ Reda√ß√£o corrigida com sucesso!")

                # Processar e exibir o texto formatado em HTML
                st.markdown("### ‚úçÔ∏è Reda√ß√£o Corrigida:")

                if isinstance(resultado, str):
                    try:
                        resultado_json = json.loads(resultado)
                        texto_formatado = resultado_json.get("raw", resultado)
                    except json.JSONDecodeError:
                        texto_formatado = resultado
                elif isinstance(resultado, dict):
                    texto_formatado = resultado.get("raw", str(resultado))
                else:
                    texto_formatado = str(resultado)

                # Formatando o texto corrigido em HTML
                texto_html = f"""
                    <div style="text-align: justify; font-size: 16px; line-height: 1.6;">
                        {texto_formatado}
                    </div>
                """

                # Bloco de resumo estilizado
                resumo_html = """
                    <div style="background-color:#f0f0f0; padding:15px; border-radius:5px; margin-top:20px;">
                        <strong>üìå Resumo das corre√ß√µes:</strong><br>
                        - Ortografia e gram√°tica corrigidas.<br>
                        - Estrutura frasal aprimorada.<br>
                        - Coes√£o e coer√™ncia refor√ßadas.<br>
                    </div>
                """

                # Exibir no Streamlit com suporte a HTML
                st.markdown(texto_html, unsafe_allow_html=True)
                st.markdown(resumo_html, unsafe_allow_html=True)

        except Exception as e:
            st.error("‚ùå Ocorreu um erro ao corrigir a reda√ß√£o.")
            st.write(str(e))

